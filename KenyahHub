if game.PlaceId == 1597763879 or game.PlaceId == 335760407 then
    -- üõ°Ô∏è Bypass Anti-Cheat autom√°tico con mensaje visual al iniciar

    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Client = ReplicatedStorage:WaitForChild("Client")
    local player = Players.LocalPlayer

    local function showBypassMessage()
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "AntiCheatBypassMsg"
        screenGui.Parent = player:WaitForChild("PlayerGui")

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 300, 0, 50)
        frame.Position = UDim2.new(0.5, -150, 0.4, 0)
        frame.BackgroundColor3 = Color3.new(0, 0, 0)
        frame.BackgroundTransparency = 0.7
        frame.BorderSizePixel = 0
        frame.AnchorPoint = Vector2.new(0.5, 0.5)
        frame.Parent = screenGui

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "Kenya mat√≥ al AntiCheat"
        textLabel.TextColor3 = Color3.new(1, 0, 0)
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = frame

        delay(2, function()
            screenGui:Destroy()
        end)
    end

    showBypassMessage()

    -- Spoofeo y bypass anti-cheat
    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    local oldIndex = mt.__index
    local oldNewIndex = mt.__newindex

    setreadonly(mt, false)

    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        if self == Client and method == "FireServer" then
            local command = args[1]
            if command == "ChangeSize" or command == "ChangeTransparency" then
                -- Bloquear la llamada para evitar detecci√≥n
                return
            end
        end
        return oldNamecall(self, ...)
    end)

    mt.__index = newcclosure(function(self, key)
        if key == "Size" then
            return Vector3.new(1,1,1)
        elseif key == "Transparency" then
            return 0
        end
        return oldIndex(self, key)
    end)

    mt.__newindex = newcclosure(function(self, key, value)
        if key == "Size" or key == "Transparency" then
            -- Ignorar cambios para evitar detecci√≥n
            return
        end
        return oldNewIndex(self, key, value)
    end)

    setreadonly(mt, true)

    -- Aqu√≠ empieza tu GUI Reach original

    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player:WaitForChild("PlayerGui")
    screenGui.Name = "LegReachGUI"
    screenGui.ResetOnSpawn = false -- Prevent GUI from resetting on spawn

    -- Create Frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 250, 0, 120) -- Increased size
    frame.Position = UDim2.new(0.5, -125, 0.5, -60)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    -- Add UI Corner for rounded edges
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = frame

    -- Create Title (for dragging)
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Text = "Leg Reach Controller"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 16
    title.Parent = frame

    -- Create Toggle Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 220, 0, 40)
    toggleButton.Position = UDim2.new(0.5, -110, 0, 40)
    toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Text = "Toggle Leg Reach: Off"
    toggleButton.Parent = frame
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleButton

    -- Create Distance TextBox
    local distanceBox = Instance.new("TextBox")
    distanceBox.Size = UDim2.new(0, 220, 0, 40)
    distanceBox.Position = UDim2.new(0.5, -110, 0, 80)
    distanceBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    distanceBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceBox.PlaceholderText = "Enter Leg Distance"
    distanceBox.Parent = frame
    local boxCorner = Instance.new("UICorner")
    boxCorner.CornerRadius = UDim.new(0, 6)
    boxCorner.Parent = distanceBox

    -- Create Close Button
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = frame
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeButton

    -- Dragging Functionality
    local dragging = false
    local dragInput, dragStart, startPos
    local function updateDrag(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    title.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                updateDrag(input)
            end
        end
    end)

    -- Variables
    local legreach = false
    local LegdistanceThreshold = 1
    local leftLeg, rightLeg, ball

    -- Character setup with detailed debugging
    local function setupCharacter()
        local char = player.Character or player.CharacterAdded:Wait()
        leftLeg = char:FindFirstChild("Left Leg") or char:FindFirstChild("LeftFoot")
        rightLeg = char:FindFirstChild("Right Leg") or char:FindFirstChild("RightFoot")
        ball = workspace:FindFirstChild("TPSSystem") and workspace.TPSSystem:FindFirstChild("TPS")
        
        if not leftLeg then warn("Left Leg/LeftFoot not found in character") end
        if not rightLeg then warn("Right Leg/RightFoot not found in character") end
        if not ball then warn("Ball (TPSSystem.TPS) not found in workspace") end
        
        if not (leftLeg and rightLeg and ball) then
            warn("Failed to find required character parts or ball")
            return false
        end
        return true
    end

    -- Leg reach logic with debugging
    local function checkLegs()
        while legreach do
            task.wait(0.1)
            if not (leftLeg and rightLeg and ball) then
                warn("Missing parts during loop, stopping leg reach")
                legreach = false
                return
            end
            local distanceToLeftLeg = (ball.Position - leftLeg.Position).Magnitude
            local distanceToRightLeg = (ball.Position - rightLeg.Position).Magnitude

            if distanceToLeftLeg <= LegdistanceThreshold then
                pcall(function()
                    firetouchinterest(leftLeg, ball, 0)
                    firetouchinterest(leftLeg, ball, 1)
                end)
            end

            if distanceToRightLeg <= LegdistanceThreshold then
                pcall(function()
                    firetouchinterest(rightLeg, ball, 0)
                    firetouchinterest(rightLeg, ball, 1)
                end)
            end
        end
    end

    -- Initialize character
    local characterSetupSuccess = setupCharacter()
    if not characterSetupSuccess then
        warn("Initial character setup failed")
        screenGui:Destroy()
        return
    end

    -- Re-setup character when it respawns
    player.CharacterAdded:Connect(function()
        if setupCharacter() and legreach then
            task.spawn(checkLegs)
        end
    end)

    -- Toggle Button Functionality
    toggleButton.MouseButton1Click:Connect(function()
        legreach = not legreach
        toggleButton.Text = "Toggle Leg Reach: " .. (legreach and "On" or "Off")
        if legreach then
            if setupCharacter() then
                task.spawn(checkLegs)
            else
                warn("Cannot enable leg reach: character setup failed")
                legreach = false
                toggleButton.Text = "Toggle Leg Reach: Off"
            end
        else
            print("Leg reach turned off")
        end
    end)

    -- Distance TextBox Functionality
    distanceBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local num = tonumber(distanceBox.Text)
            if num and num > 0 then
                LegdistanceThreshold = num
                if legreach then
                    task.spawn(checkLegs)
                end
            else
                warn("Invalid distance input")
            end
            distanceBox.Text = ""
        end
    end)

    -- Close Button Functionality
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
else
    warn("This script only works for TPS Street Soccer (PlaceId: 1597763879 or 335760407)")
end
